ممکنه توی یک شاخه ، تغییراتی در فایل ها ایجاد کنیم و فعلا قصد ادد یا کامیت کردن آن تغییرات را نداشته باشیم. در این هنگام اگر به شاخه  دیگری سوئیچ کنیم، آن تغییرات برای شاخه جدید که سئیچ کردیم حساب می شود و دیگر شاخه قبلی مالکیت آن تغییرات را ندارد.برای حل این مشکل باید قبل از سوئیچ کردن به شاخه جدید ، باید آن تغییرات را در یک جای موقت سیو کنیم تا محفوظ بمانند و سپس به شاخه های دیگر میرویم.

$ git stash save "کامنت"
سیو تغییرات یک شاخه به صورت موقت به همراه یک پیام
دقت کنید با این کار تغییراتی که درون یک شاخه دادیم از آن شاخه حذف می شوند و به طور موقت در جایی دیگر سیو می شوند. انگار که درون آن شاخه هیچ اتفاقی نیوفتاده و همه چیز دوباره به حالت اولیه بر میگردد. با این تفاوت که تغییرات در جایی دیگر سیو می شوند

$ git stash list
مشاهده ی سیو های موقتی که داشته ایم

$ git stash drop <stash name for ex : stash@{0}>
حذف سیوی که درون استش کرده ایم. بعد از این کار تغییرات دوباره به همان شاخه ای که مالکیت آن هارا دارد بر میگردند

$ git stash show -p <stash name for ex : stash@{1}>
مشاهده کامل آن تغییرات که در یک شاخه انجام داده و درون یک استش سیو کرده ایم. مثلا میبینیم یه تگ پی را حذف کرده ایم.

حال ما مصمم شده ایم که آن تغییرات موقت را روی شاخه موردنظر اعمال کنیم.

$ git stash apply <stash name for ex : stash@{2}>
اعمال سیو موقت در شاخه ی موردنظر بدون آن که آن سیو حذف شود. یعنی بعد ازاعمال کردن باید به صورت دستی آن را از استش حذف کنیم

$ git stash pop <stash name for ex : stash@{2}>
اعمال سیو موقت در شاخه ی موردنظر همراه با حذف آن از استش

حال که تغییرات را اعمال کردیم ، کافیست آن هارا ادد و کامیت کنیم